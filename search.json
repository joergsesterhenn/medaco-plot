[{"path":"https://joergsesterhenn.github.io/medaco-plot/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 medacoPlot authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joerg Sesterhenn. Author, maintainer.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sesterhenn J (2024). medacoPlot: Renders plots medaco csv data. R package version 0.0.1, https://joergsesterhenn.github.io/medaco-plot/.","code":"@Manual{,   title = {medacoPlot: Renders plots of medaco csv data},   author = {Joerg Sesterhenn},   year = {2024},   note = {R package version 0.0.1},   url = {https://joergsesterhenn.github.io/medaco-plot/}, }"},{"path":"https://joergsesterhenn.github.io/medaco-plot/index.html","id":"medacoplot","dir":"","previous_headings":"","what":"Renders plots of medaco csv data","title":"Renders plots of medaco csv data","text":"Moderne Smartmeter stellen Einspeise- und Lieferdaten über Onlineportale bereit. Zusätzlich gibt es die Rohdaten auch CSV-Form. Die Shiny app medacoPlot erlaubt es diese einem Ordner abgelegten CSV Dateien zu visualisieren.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/index.html","id":"r-package","dir":"","previous_headings":"","what":"R package","title":"Renders plots of medaco csv data","text":"Das R package medacoPlot exportiert die Methoden zum Einlesen der Daten, zur Datenmanipulation und zum Plotten der Daten. Durch installieren des package können die Funktionen ohne die Shiny App genutzt werden.","code":"install.packages(     'medacoPlot',     repos = c(         'https://joergsesterhenn.r-universe.dev',         'https://cloud.r-project.org'     ) )"},{"path":"https://joergsesterhenn.github.io/medaco-plot/index.html","id":"docker-image-bauen","dir":"","previous_headings":"","what":"Docker image bauen","title":"Renders plots of medaco csv data","text":"","code":"docker build -t medaco-plot ."},{"path":"https://joergsesterhenn.github.io/medaco-plot/index.html","id":"docker-image-ausführen","dir":"","previous_headings":"","what":"Docker image ausführen","title":"Renders plots of medaco csv data","text":"Das Verzeichnis mit den csv-Dateien muss den Container gemounted werden. Der aktuelle Stand des Images kann auch direkt aus der github container registry bezogen werden:","code":"docker run -v /local/path/to/csvs:/data -it --rm -p 3838:3838 medaco-plot docker run -v /local/path/to/csvs:/data -it --rm -p 3838:3838 ghcr.io/joergsesterhenn/medaco-plot:main"},{"path":[]},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/get_files_in_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get List of Files in Directory — get_files_in_path","title":"Get List of Files in Directory — get_files_in_path","text":"Retrieves list .CSV files specified directory.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/get_files_in_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get List of Files in Directory — get_files_in_path","text":"","code":"get_files_in_path(data_path)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/get_files_in_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get List of Files in Directory — get_files_in_path","text":"data_path Character string specifying directory path search.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/get_files_in_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get List of Files in Directory — get_files_in_path","text":"character vector file paths .CSV files directory.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/get_files_in_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get List of Files in Directory — get_files_in_path","text":"","code":"get_files_in_path(\"data/\") #> character(0)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/get_hourly_data_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Hourly Data in Long Format — get_hourly_data_long","title":"Get Hourly Data in Long Format — get_hourly_data_long","text":"Aggregates reshapes data hour, returning long format.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/get_hourly_data_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Hourly Data in Long Format — get_hourly_data_long","text":"","code":"get_hourly_data_long(power_data)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/get_hourly_data_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Hourly Data in Long Format — get_hourly_data_long","text":"power_data data frame timestamp, INPUT, OUTPUT columns.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/get_hourly_data_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Hourly Data in Long Format — get_hourly_data_long","text":"data frame hourly total_input total_output values.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/get_hourly_data_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Hourly Data in Long Format — get_hourly_data_long","text":"","code":"# Example using a small sample data frame power_data <- data.frame(   timestamp = c(        as.POSIXct(\"2000-01-01 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-01-02 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-02-01 02:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-02-02 02:00:00\", tz = \"UTC\")),   INPUT = c(1.0, 2.0, 3.0, 4.0),   OUTPUT = c(4.0, 3.0, 2.0, 1.0) ) get_hourly_data_long(power_data) #> # A tibble: 4 × 3 #>   hour  type         value #>   <chr> <chr>        <dbl> #> 1 01    total_input      3 #> 2 01    total_output     7 #> 3 02    total_input      7 #> 4 02    total_output     3"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/get_hourly_monthly_data_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Hourly and Monthly Data in Long Format — get_hourly_monthly_data_long","title":"Get Hourly and Monthly Data in Long Format — get_hourly_monthly_data_long","text":"Aggregates reshapes data hour month, returning .","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/get_hourly_monthly_data_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Hourly and Monthly Data in Long Format — get_hourly_monthly_data_long","text":"","code":"get_hourly_monthly_data_long(power_data)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/get_hourly_monthly_data_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Hourly and Monthly Data in Long Format — get_hourly_monthly_data_long","text":"power_data data frame timestamp, INPUT, OUTPUT columns.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/get_hourly_monthly_data_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Hourly and Monthly Data in Long Format — get_hourly_monthly_data_long","text":"data frame hourly monthly values.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/get_hourly_monthly_data_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Hourly and Monthly Data in Long Format — get_hourly_monthly_data_long","text":"","code":"# Example using a small sample data frame power_data <- data.frame(   timestamp = c(        as.POSIXct(\"2000-01-01 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-01-02 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-02-01 02:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-02-02 02:00:00\", tz = \"UTC\")),   INPUT = c(1.0, 2.0, 3.0, 4.0),   OUTPUT = c(4.0, 3.0, 2.0, 1.0) ) get_hourly_monthly_data_long(power_data) #> # A tibble: 4 × 4 #>   month   hour  type         value #>   <chr>   <chr> <chr>        <dbl> #> 1 2000-01 01    total_input      3 #> 2 2000-01 01    total_output     7 #> 3 2000-02 02    total_input      7 #> 4 2000-02 02    total_output     3"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/get_monthly_data_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Monthly Data in Long Format — get_monthly_data_long","title":"Get Monthly Data in Long Format — get_monthly_data_long","text":"Aggregates reshapes data month, returning long format.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/get_monthly_data_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Monthly Data in Long Format — get_monthly_data_long","text":"","code":"get_monthly_data_long(power_data)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/get_monthly_data_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Monthly Data in Long Format — get_monthly_data_long","text":"power_data data frame timestamp, INPUT, OUTPUT columns.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/get_monthly_data_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Monthly Data in Long Format — get_monthly_data_long","text":"data frame monthly total_input total_output values.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/get_monthly_data_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Monthly Data in Long Format — get_monthly_data_long","text":"","code":"# Example using a small sample data frame power_data <- data.frame(   timestamp = c(        as.POSIXct(\"2000-01-01 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-01-02 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-02-01 02:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-02-02 02:00:00\", tz = \"UTC\")),   INPUT = c(1.0, 2.0, 3.0, 4.0),   OUTPUT = c(4.0, 3.0, 2.0, 1.0) ) get_monthly_data_long(power_data) #> # A tibble: 4 × 3 #>   year_month type         value #>   <chr>      <chr>        <dbl> #> 1 2000-01    total_input      3 #> 2 2000-01    total_output     7 #> 3 2000-02    total_input      7 #> 4 2000-02    total_output     3"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/get_yearly_data_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Monthly Data in Long Format — get_yearly_data_long","title":"Get Monthly Data in Long Format — get_yearly_data_long","text":"Aggregates reshapes data year, returning long format.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/get_yearly_data_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Monthly Data in Long Format — get_yearly_data_long","text":"","code":"get_yearly_data_long(power_data)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/get_yearly_data_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Monthly Data in Long Format — get_yearly_data_long","text":"power_data data frame timestamp, INPUT, OUTPUT columns.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/get_yearly_data_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Monthly Data in Long Format — get_yearly_data_long","text":"data frame yearly total_input total_output values.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/get_yearly_data_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Monthly Data in Long Format — get_yearly_data_long","text":"","code":"# Example using a small sample data frame power_data <- data.frame(   timestamp = c(        as.POSIXct(\"2000-01-01 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-01-02 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-02-01 02:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-02-02 02:00:00\", tz = \"UTC\")),   INPUT = c(1.0, 2.0, 3.0, 4.0),   OUTPUT = c(4.0, 3.0, 2.0, 1.0) ) get_monthly_data_long(power_data) #> # A tibble: 4 × 3 #>   year_month type         value #>   <chr>      <chr>        <dbl> #> 1 2000-01    total_input      3 #> 2 2000-01    total_output     7 #> 3 2000-02    total_input      7 #> 4 2000-02    total_output     3"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/medacoPlot-package.html","id":null,"dir":"Reference","previous_headings":"","what":"medacoPlot: Renders plots of medaco csv data — medacoPlot-package","title":"medacoPlot: Renders plots of medaco csv data — medacoPlot-package","text":"Plot power input output.","code":""},{"path":[]},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/medacoPlot-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"medacoPlot: Renders plots of medaco csv data — medacoPlot-package","text":"Maintainer: Joerg Sesterhenn joerg.sesterhenn@gmail.com","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/pivot_longer_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot Data to Long Format for Input and Output — pivot_longer_data","title":"Pivot Data to Long Format for Input and Output — pivot_longer_data","text":"Transforms data wide format long format, creating separate rows total_input total_output.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/pivot_longer_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot Data to Long Format for Input and Output — pivot_longer_data","text":"","code":"pivot_longer_data(power_data)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/pivot_longer_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pivot Data to Long Format for Input and Output — pivot_longer_data","text":"power_data data frame timestamp, INPUT, OUTPUT columns.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/pivot_longer_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pivot Data to Long Format for Input and Output — pivot_longer_data","text":"data frame long format type column indicating input output, value column corresponding values.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/pivot_longer_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pivot Data to Long Format for Input and Output — pivot_longer_data","text":"","code":"# Example using a small sample data frame power_data <- data.frame(   timestamp = c(        as.POSIXct(\"2000-01-01 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-01-02 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-02-01 02:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-02-02 02:00:00\", tz = \"UTC\")),   total_input = c(1.0, 2.0, 3.0, 4.0),   total_output = c(4.0, 3.0, 2.0, 1.0) ) pivot_longer_data(power_data) #> # A tibble: 8 × 3 #>   timestamp           type         value #>   <dttm>              <chr>        <dbl> #> 1 2000-01-01 01:00:00 total_input      1 #> 2 2000-01-01 01:00:00 total_output     4 #> 3 2000-01-02 01:00:00 total_input      2 #> 4 2000-01-02 01:00:00 total_output     3 #> 5 2000-02-01 02:00:00 total_input      3 #> 6 2000-02-01 02:00:00 total_output     2 #> 7 2000-02-02 02:00:00 total_input      4 #> 8 2000-02-02 02:00:00 total_output     1"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic Plot Function — plot","title":"Generic Plot Function — plot","text":"Selects plot function based specified type plots dataset.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic Plot Function — plot","text":"","code":"plot(plot_type, power_data)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic Plot Function — plot","text":"plot_type Character, plot type dropdown menu. power_data data frame timestamp, INPUT, OUTPUT columns.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic Plot Function — plot","text":"ggplot object created appropriate plotting function.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic Plot Function — plot","text":"","code":"# Example using a small sample data frame power_data <- data.frame(   timestamp = c(        as.POSIXct(\"2000-01-01 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-01-02 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-02-01 02:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-02-02 02:00:00\", tz = \"UTC\")),   INPUT = c(1.0, 2.0, 3.0, 4.0),   OUTPUT = c(4.0, 3.0, 2.0, 1.0) ) plot(\"by month\", power_data)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_aggregated_by_hour.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Aggregated Data by Hour — plot_aggregated_by_hour","title":"Plot Aggregated Data by Hour — plot_aggregated_by_hour","text":"Generates bar plot showing hourly input output sums.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_aggregated_by_hour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Aggregated Data by Hour — plot_aggregated_by_hour","text":"","code":"plot_aggregated_by_hour(power_data)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_aggregated_by_hour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Aggregated Data by Hour — plot_aggregated_by_hour","text":"power_data data frame timestamp, INPUT, OUTPUT columns.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_aggregated_by_hour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Aggregated Data by Hour — plot_aggregated_by_hour","text":"ggplot object showing hourly aggregated values.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_aggregated_by_hour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Aggregated Data by Hour — plot_aggregated_by_hour","text":"","code":"# Example using a small sample data frame power_data <- data.frame(   timestamp = c(        as.POSIXct(\"2000-01-01 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-01-02 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-02-01 02:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-02-02 02:00:00\", tz = \"UTC\")),   INPUT = c(1.0, 2.0, 3.0, 4.0),   OUTPUT = c(4.0, 3.0, 2.0, 1.0) ) plot_aggregated_by_hour(power_data)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_aggregated_by_month.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Aggregated Data by Month — plot_aggregated_by_month","title":"Plot Aggregated Data by Month — plot_aggregated_by_month","text":"Generates bar plot showing monthly input output sums.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_aggregated_by_month.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Aggregated Data by Month — plot_aggregated_by_month","text":"","code":"plot_aggregated_by_month(power_data)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_aggregated_by_month.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Aggregated Data by Month — plot_aggregated_by_month","text":"power_data data frame timestamp, INPUT, OUTPUT columns.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_aggregated_by_month.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Aggregated Data by Month — plot_aggregated_by_month","text":"ggplot object showing monthly aggregated values.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_aggregated_by_month.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Aggregated Data by Month — plot_aggregated_by_month","text":"","code":"# Example using a small sample data frame power_data <- data.frame(   timestamp = c(        as.POSIXct(\"2000-01-01 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-01-02 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-02-01 02:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-02-02 02:00:00\", tz = \"UTC\")),   INPUT = c(1.0, 2.0, 3.0, 4.0),   OUTPUT = c(4.0, 3.0, 2.0, 1.0) ) plot_aggregated_by_month(power_data)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_aggregated_by_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Aggregated Data by Year — plot_aggregated_by_year","title":"Plot Aggregated Data by Year — plot_aggregated_by_year","text":"Generates bar plot showing yearly input output sums.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_aggregated_by_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Aggregated Data by Year — plot_aggregated_by_year","text":"","code":"plot_aggregated_by_year(power_data)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_aggregated_by_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Aggregated Data by Year — plot_aggregated_by_year","text":"power_data data frame timestamp, INPUT, OUTPUT columns.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_aggregated_by_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Aggregated Data by Year — plot_aggregated_by_year","text":"ggplot object showing yearly aggregated values.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_aggregated_by_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Aggregated Data by Year — plot_aggregated_by_year","text":"","code":"# Example using a small sample data frame power_data <- data.frame(   timestamp = c(        as.POSIXct(\"2000-01-01 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-01-02 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-02-01 02:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-02-02 02:00:00\", tz = \"UTC\")),   INPUT = c(1.0, 2.0, 3.0, 4.0),   OUTPUT = c(4.0, 3.0, 2.0, 1.0) ) plot_aggregated_by_year(power_data)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_by_hour_and_month.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Hourly Data by Month — plot_by_hour_and_month","title":"Plot Hourly Data by Month — plot_by_hour_and_month","text":"Generates bar plot showing hourly input output sums month.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_by_hour_and_month.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Hourly Data by Month — plot_by_hour_and_month","text":"","code":"plot_by_hour_and_month(power_data)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_by_hour_and_month.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Hourly Data by Month — plot_by_hour_and_month","text":"power_data data frame timestamp, INPUT, OUTPUT columns.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_by_hour_and_month.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Hourly Data by Month — plot_by_hour_and_month","text":"ggplot object showing hourly values month facets.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_by_hour_and_month.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Hourly Data by Month — plot_by_hour_and_month","text":"","code":"# Example using a small sample data frame power_data <- data.frame(   timestamp = c(        as.POSIXct(\"2000-01-01 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-01-02 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-02-01 02:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-02-02 02:00:00\", tz = \"UTC\")),   INPUT = c(1.0, 2.0, 3.0, 4.0),   OUTPUT = c(4.0, 3.0, 2.0, 1.0) ) plot_by_hour_and_month(power_data)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Heatmap of Hourly Data by Month — plot_heatmap","title":"Generate a Heatmap of Hourly Data by Month — plot_heatmap","text":"Creates heatmap show hourly input output data across months.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Heatmap of Hourly Data by Month — plot_heatmap","text":"","code":"plot_heatmap(power_data)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Heatmap of Hourly Data by Month — plot_heatmap","text":"power_data data frame timestamp, INPUT, OUTPUT columns.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Heatmap of Hourly Data by Month — plot_heatmap","text":"ggplot object heatmap representing input/output.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Heatmap of Hourly Data by Month — plot_heatmap","text":"","code":"# Example using a small sample data frame power_data <- data.frame(   timestamp = c(        as.POSIXct(\"2000-01-01 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-01-02 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-01-01 02:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-01-02 02:00:00\", tz = \"UTC\")),   INPUT = c(1.0, 2.0, 3.0, 4.0),   OUTPUT = c(4.0, 3.0, 2.0, 1.0) ) plot_heatmap(power_data)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_line_chart.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Line Chart of Hourly Data by Month — plot_line_chart","title":"Generate a Line Chart of Hourly Data by Month — plot_line_chart","text":"Creates line chart show input/output data hour month.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_line_chart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Line Chart of Hourly Data by Month — plot_line_chart","text":"","code":"plot_line_chart(power_data)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_line_chart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Line Chart of Hourly Data by Month — plot_line_chart","text":"power_data data frame timestamp, INPUT, OUTPUT columns.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_line_chart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Line Chart of Hourly Data by Month — plot_line_chart","text":"ggplot object line chart.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_line_chart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Line Chart of Hourly Data by Month — plot_line_chart","text":"","code":"# Example using a small sample data frame power_data <- data.frame(   timestamp = c(        as.POSIXct(\"2000-01-01 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-01-02 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-01-01 02:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-01-02 02:00:00\", tz = \"UTC\")),   INPUT = c(1.0, 2.0, 3.0, 4.0),   OUTPUT = c(4.0, 3.0, 2.0, 1.0) ) plot_line_chart(power_data)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Map of Dropdown Items to Plot Functions — plot_map","title":"Map of Dropdown Items to Plot Functions — plot_map","text":"data frame mapping dropdown box items corresponding plot functions.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map of Dropdown Items to Plot Functions — plot_map","text":"","code":"plot_map"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_map.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Map of Dropdown Items to Plot Functions — plot_map","text":"data frame dropdown items row names plot function names column values.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_ridgeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Ridgeline Plot of Hourly Data by Month — plot_ridgeline","title":"Generate a Ridgeline Plot of Hourly Data by Month — plot_ridgeline","text":"Creates ridgeline plot show distribution input/output data month.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_ridgeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Ridgeline Plot of Hourly Data by Month — plot_ridgeline","text":"","code":"plot_ridgeline(power_data)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_ridgeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Ridgeline Plot of Hourly Data by Month — plot_ridgeline","text":"power_data data frame timestamp, INPUT, OUTPUT columns.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_ridgeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Ridgeline Plot of Hourly Data by Month — plot_ridgeline","text":"ggplot object ridgeline plot.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_ridgeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Ridgeline Plot of Hourly Data by Month — plot_ridgeline","text":"","code":"# Example using a small sample data frame power_data <- data.frame(   timestamp = c(        as.POSIXct(\"2000-01-01 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-01-02 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-02-01 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-02-02 01:00:00\", tz = \"UTC\")),   INPUT = c(1.0, 2.0, 3.0, 4.0),   OUTPUT = c(4.0, 3.0, 2.0, 1.0) ) plot_ridgeline(power_data)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_stacked_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Stacked Area Chart of Hourly Data by Month — plot_stacked_area","title":"Generate a Stacked Area Chart of Hourly Data by Month — plot_stacked_area","text":"Creates stacked area chart visualize input/output data month.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_stacked_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Stacked Area Chart of Hourly Data by Month — plot_stacked_area","text":"","code":"plot_stacked_area(power_data)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_stacked_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Stacked Area Chart of Hourly Data by Month — plot_stacked_area","text":"power_data data frame timestamp, INPUT, OUTPUT columns.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_stacked_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Stacked Area Chart of Hourly Data by Month — plot_stacked_area","text":"ggplot object stacked area chart.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/plot_stacked_area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Stacked Area Chart of Hourly Data by Month — plot_stacked_area","text":"","code":"# Example using a small sample data frame power_data <- data.frame(   timestamp = c(        as.POSIXct(\"2000-01-01 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-01-02 01:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-02-01 02:00:00\", tz = \"UTC\"),        as.POSIXct(\"2000-02-02 02:00:00\", tz = \"UTC\")),   INPUT = c(1.0, 2.0, 3.0, 4.0),   OUTPUT = c(4.0, 3.0, 2.0, 1.0) ) plot_stacked_area(power_data)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/read_power_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Power Data — read_power_data","title":"Read Power Data — read_power_data","text":"Reads power data .CSV files specified directory, selecting specific columns using custom locale decimal grouping marks.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/read_power_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Power Data — read_power_data","text":"","code":"read_power_data(data_path)"},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/read_power_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Power Data — read_power_data","text":"data_path Character string specifying directory containing .CSV files read.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/read_power_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Power Data — read_power_data","text":"data frame containing timestamp, input, output columns files.","code":""},{"path":"https://joergsesterhenn.github.io/medaco-plot/reference/read_power_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Power Data — read_power_data","text":"","code":"read_power_data(\"data/\") #> # A tibble: 0 × 0"}]
